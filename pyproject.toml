[tool.poetry]
name = "pogo-migrate"
version = "0.1.0"
description = "Database migration tool for asyncpg"
readme = "README.md"
homepage = "https://github.com/NRWLDev/pogo-migrate"
authors = [
    "Daniel Edgecombe <daniel@nrwl.co>"
]
maintainers = [
    "Daniel Edgecombe <daniel@nrwl.co>",
]
keywords = ["migrations", "migrate", "database", "asyncpg", "yoyo"]
license = "Apache"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Database",
    "Topic :: Software Development",
    "Programming Language :: Python :: 3",
]

[tool.poetry.dependencies]
python = "^3.9"

typer-slim = "^0"
rtoml = ">=0.10"
sqlparse = "^0"
tabulate = "^0.9.0"
python-dotenv = "^1.0.0"
typing_extensions = { version = "^4.7.0", python = "<3.10" }
sqlglot = "^25.19"

[tool.poetry.group.dev.dependencies]
# Tests
asyncpg = "^0.29.0"
pytest = "^8.0.2"
pytest-random-order = "^1.1.1"
pytest-cov = "^4.1.0"
pytest-env = "^0.8.1"

# Style
ruff = "^0.3.0"
pre-commit = "^3.0.2"

# Release management
changelog-gen = "^0.12"
pytest-asyncio = "^0.23.5"
nest-asyncio = "^1.6.0"

[tool.changelog_gen]
current_version = "0.1.0"
reject_empty = true
allowed_branches = [
    "main",
]
date_format = "(released %Y-%m-%d)"

[tool.changelog_gen.github]
strip_pr_from_description = true
extract_pr_from_description = true
extract_common_footers = true

[[tool.changelog_gen.extractors]]
footer = ["closes", "fixes", "Refs"]
pattern = '#(?P<issue_ref>\d+)'

[[tool.changelog_gen.link_generators]]
source = "issue_ref"
link = "https://github.com/NRWLDev/pogo-migrate/issues/{0}"

[[tool.changelog_gen.link_generators]]
source = "__change__"
text = "{0.short_hash}"
link = "https://github.com/NRWLDev/pogo-migrate/commit/{0.commit_hash}"

[[tool.changelog_gen.files]]
filename = "pyproject.toml"
pattern = 'version = "{version}"'


[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = [
    "--random-order",
    "-p no:logging",
]
env = [
    "D:POSTGRES_DSN=postgres://unit:password@localhost:5435/unit",
]

[tool.coverage.report]
sort = "cover"
fail_under = 95
show_missing = true
skip_covered = true
exclude_lines = [
    "# pragma: no cover",
    "if t.TYPE_CHECKING:",
]

[tool.coverage.run]
branch = true
source = ["src/pogo_migrate"]

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D",
    "FIX",
    "TD003",
    "ERA",
    "E501",    # Handled by ruff format
]

[tool.ruff.lint.per-file-ignores]
"tasks.py" = ["ANN", "E501", "INP001", "S"]
"src/pogo_migrate/cli.py" = ["UP007", "B008"]
"tests/*" = ["ANN", "D", "S105", "S106", "SLF", "DTZ005", "S101", "S608", "TD", "PLR0913"]

[tool.ruff.format]
line-ending = "lf"
quote-style = "double"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.isort]
known-first-party = ["pogo_migrate"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.poetry.scripts]
pogo = "pogo_migrate.cli:app"

[build-system]
requires = ["poetry-core>=1.0"]
build-backend = "poetry.core.masonry.api"
